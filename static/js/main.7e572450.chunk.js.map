{"version":3,"sources":["components/Search.js","components/redux/reducers/modalDetailsSlice.js","components/Movie.js","components/MovieList.js","components/redux/reducers/favoritesSlice.js","components/FavoritesHandler.js","components/Modal.js","components/redux/reducers/movieListSlice.js","App.js","components/redux/store.js","index.js"],"names":["Search","props","input","newSearch","useDispatch","className","type","value","placeholder","onChange","event","target","onClick","modalDetailsSlice","createSlice","name","initialState","details","reducers","setModalDetails","state","action","payload","clearModalDetails","actions","Movie","movie","dispatch","getMovieDetails","a","key","imdbID","fetch","response","json","responseJson","console","log","src","Poster","alt","Title","Year","MovieList","getModalDetails","movieList","useSelector","length","map","favoritesSlice","favorites","addToFavorites","removeFromFavorites","FavoritesHandler","Modal","modalDetails","Genre","Director","Plot","Ratings","rating","Source","Value","movieListSlice","setMovieList","clearList","App","useState","movieSearch","setMovieSearch","movieRequest","useEffect","configureStore","reducer","movieSearchReducer","movieListReducer","modalDetailsReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.7e572450.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { MdCancel } from \"react-icons/md\";\r\nimport { useDispatch } from \"react-redux\";\r\n// import { newSearch, clearSearch } from \"./redux/reducers/movieSearchSlice\";\r\n// import { useSelector } from \"react-redux\";\r\n\r\nconst style = {\r\n  container: {\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  input: {\r\n    height: 50,\r\n    width: \"400px\",\r\n    outline: \"none\",\r\n    fontSize: 23,\r\n    textAlign: \"center\",\r\n    backgroundColor: \"#E8D9D6\",\r\n    borderRadius: \"25px\",\r\n    border: \"none\",\r\n  },\r\n  clearButton: {\r\n    position: \"absolute\",\r\n    right: 10,\r\n    fontSize: 30,\r\n    color: \"#1f1f1f\",\r\n    cursor: \"pointer\",\r\n  },\r\n};\r\n\r\nconst Search = (props) => {\r\n  const { input, newSearch } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"search-container\">\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          placeholder=\"Search for a movie :)\"\r\n          onChange={(event) => newSearch(event.target.value)}\r\n        ></input>\r\n        {input ? (\r\n          <MdCancel className=\"search-clear\" onClick={() => newSearch(\"\")} />\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n\r\n// const dispatch = useDispatch();\r\n\r\n//   const { search } = useSelector((state) => state.movieSearch);\r\n\r\n//   return (\r\n//     <div>\r\n//       <div style={style.container}>\r\n//         <input\r\n//           style={style.input}\r\n//           type=\"text\"\r\n//           // value={input}\r\n//           value={search}\r\n//           placeholder=\"Search for a movie :)\"\r\n//           onChange={(event) => dispatch(newSearch(event.target.value))}\r\n//         ></input>\r\n//         {search ? (\r\n//           <MdCancel\r\n//             style={style.clearButton}\r\n//             onClick={() => dispatch(clearSearch())}\r\n//           />\r\n//         ) : null}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const modalDetailsSlice = createSlice({\r\n  name: \"modalDetails\",\r\n  initialState: {\r\n    details: \"\",\r\n  },\r\n  reducers: {\r\n    setModalDetails: (state, action) => {\r\n      state.details = action.payload;\r\n    },\r\n    clearModalDetails: (state) => {\r\n      state.details = \"\";\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setModalDetails, clearModalDetails } = modalDetailsSlice.actions;\r\nexport default modalDetailsSlice.reducer;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setModalDetails } from \"./redux/reducers/modalDetailsSlice\";\r\n\r\nconst Movie = (props) => {\r\n  const { movie } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const getMovieDetails = async () => {\r\n    try {\r\n      const key = `https://www.omdbapi.com/?i=${movie.imdbID}&apikey=b46dc190`;\r\n      const response = await fetch(key);\r\n      const responseJson = await response.json();\r\n\r\n      if (responseJson) {\r\n        dispatch(setModalDetails(responseJson));\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      key={movie.Title}\r\n      className=\"movie-element\"\r\n      onClick={() => getMovieDetails(movie.imdbID)}\r\n    >\r\n      <img src={movie.Poster} alt={`poster unavailable`} />\r\n      <div>\r\n        <h5>{movie.Title}</h5>\r\n        <p>{movie.Year}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\nimport Movie from \"./Movie\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst MovieList = (props) => {\r\n  const { getModalDetails } = props;\r\n\r\n  const { movieList } = useSelector((state) => state.movieList);\r\n\r\n  return (\r\n    <>\r\n      {movieList.length > 0 && (\r\n        <div className=\"list-container\">\r\n          {movieList.map((movie) => (\r\n            <Movie movie={movie} getModalDetails={getModalDetails} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nexport const favoritesSlice = createSlice({\r\n  name: \"FavoritesList\",\r\n  initialState: {\r\n    favorites: [],\r\n  },\r\n  reducers: {\r\n    addToFavorites: (state, action) => {\r\n      state.favorites += action.payload\r\n    },\r\n    removeFromFavorites: (state, action) => {\r\n      state.favorites -= action.payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const { addToFavorites, removeFromFavorites } = favoritesSlice.actions\r\nexport default favoritesSlice.reducer\r\n","import React from \"react\"\r\nimport { useEffect } from \"react\"\r\nimport { ImHeart } from \"react-icons/im\"\r\nimport {\r\n  addToFavorites,\r\n  removeFromFavorites,\r\n} from \"./redux/reducers/favoritesSlice\"\r\nimport { useDispatch } from \"react-redux\"\r\n\r\nconst FavoritesHandler = (props) => {\r\n  const { details } = props\r\n\r\n  const addMovie = (details) => {\r\n      \r\n    // const localData = localStorage.getItem(\"favorites\")\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ImHeart className=\"favorite-button\" />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FavoritesHandler\r\n","import React from \"react\"\r\nimport { MdCancel } from \"react-icons/md\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { clearModalDetails } from \"./redux/reducers/modalDetailsSlice\"\r\nimport FavoritesHandler from \"./FavoritesHandler\"\r\n\r\nconst Modal = (props) => {\r\n  const { details } = useSelector((state) => state.modalDetails)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  return (\r\n    <>\r\n      {details && (\r\n        <>\r\n          <div\r\n            className=\"modal-background\"\r\n            onClick={() => dispatch(clearModalDetails())}\r\n          />\r\n          <div className={\"modal-container\"}>\r\n            <MdCancel\r\n              className=\"modal-close\"\r\n              onClick={() => dispatch(clearModalDetails())}\r\n            />\r\n            <h4>\r\n              {details.Title} ({details.Year})\r\n            </h4>\r\n            <img src={details.Poster} alt={`Poster unavailable`} />\r\n            <div>\r\n              <p>\r\n                <strong>Genre:</strong> {details.Genre}\r\n              </p>\r\n              <p>\r\n                <strong>Director:</strong> {details.Director}\r\n              </p>\r\n            </div>\r\n            <p>{details.Plot}</p>\r\n            {details.Ratings.length > 0 || details.Ratings != []\r\n              ? details.Ratings.map((rating) => (\r\n                  <p>\r\n                    <strong>{rating.Source}:</strong> {rating.Value}\r\n                  </p>\r\n                ))\r\n              : null}\r\n            {/* <ImHeart className=\"favorite-button\" /> */}\r\n            <FavoritesHandler details={details} />\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const movieListSlice = createSlice({\r\n  name: \"movieList\",\r\n  initialState: {\r\n    movieList: [],\r\n  },\r\n  reducers: {\r\n    setMovieList: (state, action) => {\r\n      state.movieList = action.payload;\r\n    },\r\n    clearList: (state) => {\r\n      state.movieList = [];\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setMovieList, clearList } = movieListSlice.actions;\r\nexport default movieListSlice.reducer;\r\n","import React, { useEffect, useState } from \"react\"\r\nimport Search from \"./components/Search\"\r\nimport MovieList from \"./components/MovieList\"\r\nimport Modal from \"./components/Modal\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport {\r\n  setMovieList,\r\n  clearList,\r\n} from \"./components/redux/reducers/movieListSlice\"\r\nimport \"./styles/App.scss\"\r\n\r\nconst App = () => {\r\n  // const [movies, setMovies] = useState([]);\r\n  const [movieSearch, setMovieSearch] = useState(\"\")\r\n\r\n  const dispatch = useDispatch()\r\n  // const { search } = useSelector((state) => state.movieSearch);\r\n\r\n  const movieRequest = async (movieSearch) => {\r\n    try {\r\n      const key = `https://www.omdbapi.com/?s=${movieSearch}&apikey=b46dc190`\r\n\r\n      const response = await fetch(key)\r\n      const responseJson = await response.json()\r\n\r\n      console.log(responseJson)\r\n\r\n      if (responseJson.Search) {\r\n        dispatch(setMovieList(responseJson.Search))\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n  // const movieRequest = async (movieSearch) => {\r\n  //   try {\r\n  //     const key = `https://www.omdbapi.com/?s=${movieSearch}&apikey=b46dc190`;\r\n\r\n  //     const response = await fetch(key);\r\n  //     const responseJson = await response.json();\r\n\r\n  //     console.log(responseJson);\r\n\r\n  //     if (responseJson.Search) {\r\n  //       dispatch(setMovieList(responseJson.Search));\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.log(error);\r\n  //   }\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   movieRequest(movieSearch);\r\n  //   if (movieSearch === \"\") setMovies([]);\r\n  // }, [movieSearch]);\r\n  useEffect(() => {\r\n    movieRequest(movieSearch)\r\n    if (movieSearch === \"\") dispatch(clearList())\r\n  }, [movieSearch])\r\n\r\n  // useEffect(() => {}, [favorites]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Search input={movieSearch} newSearch={setMovieSearch} />\r\n      <MovieList />\r\n      <Modal />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n// const addToFavorites = () => {\r\n//   localStorage.setItem(\r\n//     `${modalDetails.Title}`,\r\n//     JSON.stringify([\r\n//       modalDetails.Title,\r\n//       modalDetails.Year,\r\n//       modalDetails.imdbID,\r\n//     ])\r\n//   );\r\n// };\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n// import movieSearchReducer from \"../redux/reducers/movieSearch\";\r\nimport movieListReducer from \"./reducers/movieListSlice\";\r\nimport modalDetailsReducer from \"./reducers/modalDetailsSlice\";\r\nimport movieSearchReducer from \"./reducers/modalDetailsSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    movieSearch: movieSearchReducer,\r\n    movieList: movieListReducer,\r\n    modalDetails: modalDetailsReducer,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport store from \"./components/redux/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}